#!/bin/bash

####################################################
# Change between Jdk versions
#

jdk(){
	JDK_VERSION=$1
	case $1 in
		8)
			VERSION_JAVA=$VERSION_JAVA_8
		;;
		11)
			VERSION_JAVA=$VERSION_JAVA_11
		;;
		17)
			VERSION_JAVA=$VERSION_JAVA_17
		;;
		21)
			VERSION_JAVA=$VERSION_JAVA_21
		;;
		24|*)
			VERSION_JAVA=$VERSION_JAVA_24
		;;
	esac

	export JAVA_HOME=$JAVA_FOLDER/$VERSION_JAVA
	if [ ! -d $JAVA_HOME ]; then
		printf "\e[33m✋ Java $VERSION_JAVA not installed.\n    - Try install-jdk -v ${JDK_VERSION:=20}\033\e[0m\n"
		return
	fi
	updateJdkAlternatives
	printf "\n\e[1;33m☕ Switching to Java $VERSION_JAVA -> $JAVA_HOME\033\e[0m\n"
}

jdk8(){
	jdk 8
}

jdk11(){
	jdk 11
}

jdk17(){
	jdk 17
}

jdk21(){
	jdk 21
}

jdk24(){
	jdk 24
}

jdkNext(){
	export JAVA_HOME=$JAVA_NEXT_HOME
	updateJdkAlternatives
	printf "\n\e[1;33m☕ Switching to Java Next -> $JAVA_HOME\033\e[0m\n"
}

jdkNextBuild(){

	sudo dnf install freetype-devel \
		cups-devel \
		libXtst-devel \
		libXt-devel \
		libXrender-devel \
		libXrandr-devel \
		libXi-devel \
		alsa-lib-devel \
		libffi-devel \
		autoconf \
		gcc-c++ \
		fontconfig-devel -y

	OPENJDK_JDK=$HOME/git/openjdk/jdk

	if [ -d $OPENJDK_JDK ]; then
		echo "We have the folder $OPENJDK_JDK"
		cd $OPENJDK_JDK
		git pull
	else
		echo "We do not have the folder $OPENJDK_JDK"
		mkdir -p $OPENJDK_JDK
		git clone https://github.com/openjdk/jdk.git $OPENJDK_JDK
		cd $OPENJDK_JDK
		git config pull.rebase false
	fi

	bash configure  --with-version-date=$(date +"%Y-%m-%d") --with-vendor-name=JarryDk

	make clean images

	printf "\n\e[1;33m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\033\e[0m"
	printf "\n\e[1;33m~~ ☕ Lets have a look at the Proerty settings after building JDK  \033\e[0m"
	printf "\n\e[1;33m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\033\e[0m\n"
	printf "\033[32m---------------------------------------------------------------------\n"
	$JAVA_NEXT_HOME/bin/java -XshowSettings:properties -version
	printf "\033[32m---------------------------------------------------------------------\033[39m\n"
}

####################################################
# Install jdk
#

install-jdk(){

	APP_HOME_DIR="/opt/java"
	APP_NAME="Eclipse Adoptium Temurin (Jdk)"
	DRY_RUN=false

	VERSION=23

	commandInput=$@
	if [[ " ${commandInput[*]} " =~ " help " ]]; then
		echo "Usage:"
		echo "  install-jdk [options] [command]"
		echo ""
		echo "Available Commands:"
		echo "  help    Help about any command"
		echo ""
		echo "Options:"
		echo "  -v | --version          Version of software to install (default \"$VERSION\")"
		echo "  -h | --app-home-dir     Path to the home folder of the software (default \"$APP_HOME_DIR\")"
		echo "  -s | --software-dir     Path to store the downloaded software (default \"$SOFTWARE_FOLDER\")"
		echo "  --dryrun                Dryrun (true|false) (default \"$DRY_RUN\")"
		echo ""
		exit 0
	fi

	while [[ $# -gt 1 ]]; do
		case $1 in
			-v|--version)
				VERSION="$2"
				shift # past argument
				shift # past value
				;;
			-h|--app-home-dir)
				APP_HOME_DIR="$2"
				shift # past argument
				shift # past value
				;;
			-s|--software-dir)
				SOFTWARE_FOLDER="$2"
				shift # past argument
				shift # past value
				;;
			--dryrun)
				DRY_RUN="$2"
				shift # past argument
				shift # past value
				;;
			-*|--*)
				echo "Unknown option $1"
				exit 1
				;;
		esac
	shift # past argument or value
	done

	case $VERSION in

		8)
		# https://github.com/adoptium/temurin8-binaries
		ADOPTIUM_TOP_VERSION=8
		ADOPTIUM_TAG_VERSION=$VERSION_JAVA_8
		ADOPTIUM_FOLDER=$VERSION_JAVA_8
		ADOPTIUM_ARCHIVE_NAME="OpenJDK"$ADOPTIUM_TOP_VERSION"U-jdk_x64_linux_hotspot_"$(echo $ADOPTIUM_FOLDER |tr -d 'jdk'|tr -d '-')".tar.gz"
		;;
		11)
		# https://github.com/adoptium/temurin11-binaries
		ADOPTIUM_TOP_VERSION=11
		ADOPTIUM_TAG_VERSION=$(echo $VERSION_JAVA_11 | sed -r 's/\+/%2b/g')
		ADOPTIUM_FOLDER=$VERSION_JAVA_11
		ADOPTIUM_ARCHIVE_NAME="OpenJDK"$ADOPTIUM_TOP_VERSION"U-jdk_x64_linux_hotspot_"$(echo $ADOPTIUM_FOLDER |tr -d 'jdk-'|tr - _|tr '+' _)".tar.gz"
		;;
		17)
		# https://github.com/adoptium/temurin17-binaries
		ADOPTIUM_TOP_VERSION=17
		ADOPTIUM_TAG_VERSION=$(echo $VERSION_JAVA_17 | sed -r 's/\+/%2b/g')
		ADOPTIUM_FOLDER=$VERSION_JAVA_17
		ADOPTIUM_ARCHIVE_NAME="OpenJDK"$ADOPTIUM_TOP_VERSION"U-jdk_x64_linux_hotspot_"$(echo $ADOPTIUM_FOLDER |tr -d 'jdk-'|tr - _|tr '+' _)".tar.gz"
		;;
		21)
		# https://github.com/adoptium/temurin21-binaries
		ADOPTIUM_TOP_VERSION=21
		ADOPTIUM_TAG_VERSION=$(echo $VERSION_JAVA_21 | sed -r 's/\+/%2b/g')
		ADOPTIUM_FOLDER=$VERSION_JAVA_21
		ADOPTIUM_ARCHIVE_NAME="OpenJDK"$ADOPTIUM_TOP_VERSION"U-jdk_x64_linux_hotspot_"$(echo $ADOPTIUM_FOLDER |tr -d 'jdk-'|tr - _|tr '+' _)".tar.gz"
		;;
		24|*)
		# https://github.com/adoptium/temurin23-binaries
		ADOPTIUM_TOP_VERSION=24
		ADOPTIUM_TAG_VERSION=$(echo $VERSION_JAVA_24 | sed -r 's/\+/%2b/g')
		ADOPTIUM_FOLDER=$VERSION_JAVA_24
		ADOPTIUM_ARCHIVE_NAME="OpenJDK"$ADOPTIUM_TOP_VERSION"U-jdk_x64_linux_hotspot_"$(echo $ADOPTIUM_FOLDER |tr -d 'jdk-'|tr - _|tr '+' _)".tar.gz"
		;;
	esac

	echo "About to install $APP_NAME"
	echo "  Version             : $VERSION"
	echo "  App Home folder     : $APP_HOME_DIR"
	echo "  Software folder     : $SOFTWARE_FOLDER"
	echo "  Dryrun              : $DRY_RUN"

	echo "ADOPTIUM_ARCHIVE_NAME : $ADOPTIUM_ARCHIVE_NAME"

	if [ $DRY_RUN = true ]; then
		echo ""
		echo "Dryrun - Nothing will be downloaded and nothing will be installed"
		return
	fi

	ARCHIVE_PATH="$SOFTWARE_FOLDER/$ADOPTIUM_ARCHIVE_NAME"
	DOWNLOAD_ADDRESS="https://github.com/adoptium/temurin"$ADOPTIUM_TOP_VERSION"-binaries/releases/download/$ADOPTIUM_TAG_VERSION/$ADOPTIUM_ARCHIVE_NAME"

	if [ ! -f "$ARCHIVE_PATH" ]; then
		echo "Downloading: $DOWNLOAD_ADDRESS..."
		echo "Download location: $ARCHIVE_PATH"
		wget -P $SOFTWARE_FOLDER $DOWNLOAD_ADDRESS
		wgetreturn=$?
		if [ $wgetreturn -ne 0 ]; then
			echo "Not possible to download $APP_NAME - Exit Status : $wgetreturn"
			return
		fi
	else
		echo "$APP_NAME archive already exists."
	fi

	if [ ! -d "$APP_HOME_DIR" ]; then
			sudo mkdir -p $APP_HOME_DIR
		fi
		sudo chown $LOGNAME:$LOGNAME -R $APP_HOME_DIR

	if [ ! -d "$APP_HOME_DIR/$ADOPTIUM_FOLDER" ]; then
		echo "Do installation of $ADOPTIUM_FOLDER"
		tar -xzf $ARCHIVE_PATH -C $APP_HOME_DIR
		echo "Java installed in the folder $APP_HOME_DIR/$ADOPTIUM_FOLDER"
	else
		echo "$APP_NAME ($ADOPTIUM_FOLDER) is already installed in $APP_HOME_DIR"
	fi

	echo ""
	echo "Set the user $LOGNAME as the owner of $APP_HOME_DIR after the installation is done"
	sudo chown $LOGNAME:$LOGNAME -R $APP_HOME_DIR

	echo ""
	printf "\033[32m-----------------------------------------------------\033[39m\n"
	printf "\033[32m$APP_NAME :: $ADOPTIUM_ARCHIVE_NAME :: installed\033[39m\n"
	printf "\033[32m-----------------------------------------------------\033[39m\n"

}

install-jdk8(){
  install-jdk -v 8
}

install-jdk11(){
  install-jdk -v 11
}

install-jdk17(){
  install-jdk -v 17
}

install-jdk21(){
  install-jdk -v 21
}

install-jdk24(){
  install-jdk -v 24
}

updateJdkAlternatives() {

    ALTERNATIVES_NAME=alternatives
    if [ -f /etc/redhat-release ]; then
        ALTERNATIVES_NAME=alternatives
    fi
    if [ -f /etc/lsb-release ]; then
	    ALTERNATIVES_NAME=update-alternatives
    fi

	printf "\e[32m✔ JAVA_HOME -> $JAVA_HOME\033\e[0m$@\n"

    sudo $ALTERNATIVES_NAME --install "/usr/bin/java" java "$JAVA_HOME/bin/java" 1
	sudo $ALTERNATIVES_NAME --set java "$JAVA_HOME/bin/java"

	if [ -f "$JAVA_HOME/bin/javac" ]; then
		sudo $ALTERNATIVES_NAME --install "/usr/bin/javac" javac "$JAVA_HOME/bin/javac" 1 2> /dev/null
		sudo $ALTERNATIVES_NAME --set javac "$JAVA_HOME/bin/javac"
		printf "\e[32m✔ /usr/bin/javac -> $JAVA_HOME/bin/javac\033\e[0m\n"
	else
		printf "\e[33m✋ $JAVA_HOME/bin/javac was not found\033\e[0m\n"
	fi

	if [ -f "$JAVA_HOME/bin/javadoc" ]; then
		sudo $ALTERNATIVES_NAME --install "/usr/bin/javadoc" javadoc "$JAVA_HOME/bin/javadoc" 1 2> /dev/null
		sudo $ALTERNATIVES_NAME --set javadoc "$JAVA_HOME/bin/javadoc"
		printf "\e[32m✔ /usr/bin/javadoc -> $JAVA_HOME/bin/javadoc\033\e[0m\n"
	else
		printf "\e[33m✋ $JAVA_HOME/bin/javadoc was not found\033\e[0m\n"
	fi

	if [ -f "$JAVA_HOME/bin/keytool" ]; then
		sudo $ALTERNATIVES_NAME --install "/usr/bin/keytool" keytool "$JAVA_HOME/bin/keytool" 1 2> /dev/null
		sudo $ALTERNATIVES_NAME --set keytool "$JAVA_HOME/bin/keytool"
		printf "\e[32m✔ /usr/bin/keytool -> $JAVA_HOME/bin/keytool\033\e[0m\n"
	else
		printf "\e[33m✋ $JAVA_HOME/bin/keytool was not found\033\e[0m\n"
	fi

}